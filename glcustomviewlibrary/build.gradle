apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'

def versionStr = '1.2.0'

def kotlin_version = '1.9.0'

def getCurrentGitBranch() {
    def gitBranch = "Unknown branch"
    try {
        def workingDir = new File("${project.projectDir}")
        def result = 'git rev-parse --abbrev-ref HEAD'.execute(null, workingDir)
        result.waitFor()
        if (result.exitValue() == 0) {
            gitBranch = result.text.trim()
        }
    } catch (e) {
    }
    return gitBranch
}

def getUserName() {
    return System.properties['user.name']
}

apply plugin: 'maven-publish'
apply plugin: 'signing'

group = "com.algorigo.ui"
archivesBaseName = "glcustomview"
if (getCurrentGitBranch().equals('master')) {
    version = versionStr
} else {
    version = "${versionStr}-${getUserName()}-SNAPSHOT"
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = archivesBaseName
            pom {
                name = 'GLCustomViewLibrary'
                description = 'Open GL Custom View Library'
                url = 'https://github.com/Algorigo/GLCustomViewLibrary'
                artifact("$buildDir/outputs/aar/glcustomview-release.aar")

                licenses {
                    license {
                        name = 'The Apache Software License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                developers {
                    developer {
                        id = 'rouddy'
                        name = 'Rouddy'
                        email = 'rouddy@naver.com'
                    }
                }

                scm {
                    connection = 'scm:https://github.com/Algorigo/GLCustomViewLibrary.git'
                    developerConnection = 'scm:git:https://github.com/Algorigo/GLCustomViewLibrary.git'
                    url = 'https://github.com/Algorigo/GLCustomViewLibrary'
                }
            }
        }
    }
    repositories {
        maven {
            url = version.endsWith('SNAPSHOT') ? NEXUS_SNAPSHOT_REPOSITORY_URL : NEXUS_REPOSITORY_URL
            credentials {
                username = findProperty('nexusUsername')
                password = findProperty('nexusPassword')
            }
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}

android {
    namespace "com.algorigo.glcustomviewlibrary"

    compileSdk 34

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 34
        versionCode 1
        versionName this.version

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation"org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test:runner:1.6.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.6.1'

    // ReactiveX
    implementation 'io.reactivex.rxjava3:rxjava:3.1.8'
    implementation 'io.reactivex.rxjava3:rxandroid:3.0.2'
    implementation 'io.reactivex.rxjava3:rxkotlin:3.0.1'
    implementation 'com.jakewharton.rxrelay3:rxrelay:3.0.1'
}
